* Motivation
  :PROPERTIES:
  :reveal_background: https://pbs.twimg.com/media/CB_zkhZWYAQprlG.jpg
  :reveal_background_size: 75%
  :reveal_extra_attr: data-background-opacity="0.5"
  :END:

@@html:<h3>Novel Conventions in Reporoducbility for HPC Research</h3>@@

# Novel convention in reporoducbility: not only reporting of set up, but also providing software with automated installation

# https://absolutelymaybe.plos.org/wp-content/uploads/sites/8/2020/05/Self-correcting-1.jpg
# https://i.pinimg.com/originals/b4/d5/0d/b4d50de671ecdf63aea9cff806629668.png
# http://2.bp.blogspot.com/-oO_lAo5MofU/UNSPmeMzF3I/AAAAAAAAB2w/O2dyKWZ0dZs/s400/thinker2.jpg

# The Simpsons, Season 26, Episode 15 "43 is missing again."
# https://www.arcintermedia.com/media/homer-clones.jpg
# https://coub-anubis-a.akamaized.net/coub_storage/coub/simple/cw_image/7bfe73c4290/a976f59a11dd49b028a9f/1410968101_1393138197_00032.jpg
# https://i.pinimg.com/originals/b8/75/76/b875765cf467f122ea7e22b6e6b8a765.jpg
# https://tvline.com/wp-content/uploads/2017/03/the-simpsons-trump-university-video-1.jpg

** Evolution of approaches to reproducible research in HPC
  :PROPERTIES:
  :reveal_background: https://image.slidesharecdn.com/delivery-hero-161216080529/95/the-delivery-hero-a-simpsons-as-a-service-storyboard-3-638.jpg
  :reveal_background_size: 100%
  :reveal_extra_attr: data-background-opacity="0.15"
  :END:

#+ATTR_REVEAL: :frag (appear appear) :frag_idx (1 2)
- _"Experimental setup"_ section in HPC papers
- "{{{alert(Measurement bias)}}} is *significant*, *commonplace*, and *unpredictable*". [[https://scholar.google.com/citations?user=Z4y_Z3sAAAAJ&hl=de&oi=sra][T.Mytkowicz]] et al. ([[https://doi.org/10.1145/1508284.1508275][2009]])
  {{{small("Producing wrong data without doing anything obviously wrong!" ACM SIGPLAN)}}}
  #+ATTR_REVEAL: :frag (appear appear) :frag_idx (3 4)
  - "Program performance is /sensitive to the experimental setup/."
    # - {{{small("Program performance is /sensitive to the experimental setup/... an insignificant and seemingly irrelevant change can dramatically affect the performance."
    #   \(\implies\) we must try to reproduce experimental setups as close as possible)}}}
    # computer systems are sensitive: an insignificant and seemingly irrelevant change can dramatically affect the performance of the system.
    #+ATTR_REVEAL: :frag (grow) :frag_idx (5)
    - @@html:<div style="color:#700">@@ _conventions_ for repr. experiments. @@html:</div>@@ E.g.: I.Jimenez et al ([[https://doi.org/10.1109/IPDPSW.2017.157][2017]])
      {{{small("The Popper Convention: Making Reproducible Systems Evaluation Practical". IPDPS17)}}}
  - /statistics can help/ to detect (causal analysis) and avoid (setup randomization) bias
    # - {{{small(common /statistical methods can help/ "for detecting (causal analysis) and for avoiding (setup randomization) measurement bias")}}}
    #+ATTR_REVEAL: :frag (shrink) :frag_idx (5)
    - @@html:<div style="color:#700">@@ careful reporting in terms of _statistics_. @@html:</div>@@ E.g.: [[https://scholar.google.com/citations?user=DdBvcBEAAAAJ&hl=de&oi=sra][T.Hoefler]] and R.Belli ([[https://doi.org/10.1145/2807591.2807644][2015]])
      {{{small("Scientific Benchmarking of Parallel Computing Systems: Twelve Ways to Tell the Masses when Reporting Performance Results". SC15)}}}
      # careful reporting in terms of _statistics_. E.g.: [[https://scholar.google.com/citations?user=DdBvcBEAAAAJ&hl=de&oi=sra][T. Hoefler]] and R. Belli ([[https://doi.org/10.1145/2807591.2807644][2015]])

*** Evolution of approaches to reproducible research in HPC
  :PROPERTIES:
  :reveal_background: https://image.slidesharecdn.com/delivery-hero-161216080529/95/the-delivery-hero-a-simpsons-as-a-service-storyboard-3-638.jpg
  :reveal_background_size: 100%
  :reveal_extra_attr: data-background-opacity="0.15"
  :END:

- personal story: _EC cares_ (2020)
  #+BEGIN_QUOTE
    ... to have a *_reproducible_ benchmarking, optimisations, and visualisations*.

    ... to provide how to *_reproduce the experiments_* in line with *open science and open data standards*.

    ... *scientifically rigorous reporting* results
  #+END_QUOTE

** [[https://doi.org/10.1109/IPDPSW.2017.157][ ~Popper~ convention]]
  :PROPERTIES:
  :reveal_background: ./figs/spack/popper_convention.png
  :reveal_background_size: 900px
  :reveal_extra_attr: data-background-opacity="0.5"
  :END:

#+ATTR_REVEAL: :frag (appear) :frag_idx (1)
-
  #+BEGIN_QUOTE
    - _verbal instructions_ are _NOT_ _safe_ and/or _"rigorous"_
    - instead, provide a set of _precise configs_ and _scripts_ that describe
      - available packages and default preferences 
      - how to deploy the software
      - how to produce plots
    - must report _metadata_
  #+END_QUOTE

# +ATTR_HTML: :width 100%
# [[./figs/spack/popper_experimentation_workflow_DevOps.png]]
@@html:<p class="fragment fade-up"><img src="https://ieeexplore.ieee.org/mediastore_new/IEEE/content/media/7964630/7965008/7965226/7965226-fig-1-source-large.gif" width=60% alt="Popper toolchain"/> </p>@@

# on-premises infrastructure
# Version Control
# package Management
# experiment Orchestration And Environment Capture
# Infrastructure Automation
# data Analysis and Visualization
# Performance Monitoring
# Continuous Integration
# Automated Performance Regression Testing

** Reproducing Python environment on the local workstation (PyPI)
  :PROPERTIES:
  :reveal_background: https://pypi.org/static/images/logo-large.svg
  :reveal_background_size: 50%
  :reveal_extra_attr: data-background-opacity="0.5"
  :END:

If you do not make a performance study, it's as *simple as this*:
#+ATTR_REVEAL: :frag (appear appear appear appear) :frag_idx (1 1 2 3)
- take/create a list of required packages
  #+BEGIN_SRC yaml
    numpy==1.18.2
    scipy>=1.1.0
    pandas
    mpi4py
    profilehooks
  #+END_SRC
- and run =pip=
  #+BEGIN_SRC sh
    pip install -r requirements.txt
  #+END_SRC
- report/store the existing software environment
  #+BEGIN_SRC sh
    pip freeze > requirements.txt
  #+END_SRC
- ... but in HPC we care!!!

** What about reproducing general software environments on the resources of several HPC centers at once?
  :PROPERTIES:
  :reveal_background: https://images.squarespace-cdn.com/content/5be48621f407b46d6a7729ee/1549584229680-J87WH6GI2I1Z1O0BARLK/The+Little+Bit-logo-black.png
  :reveal_background_size: 60%
  :reveal_extra_attr: data-background-opacity="0.25"
  :END:

# #+ATTR_REVEAL: :frag (none none appear) :frag_idx (- - 1)
# - It's like a little bit harder 
# - Like a little...
# - ... except a lot!
#   #+ATTR_HTML: :width 75%
#   https://s3cf.recapguide.com:444/img/tv/117/21x14/The-Simpsons-Season-21-Episode-14-30-5364.jpg

# +ATTR_REVEAL: :frag (none none appear) :frag_idx (- - 1)

@@html:<p class="fragment fade-in-then-semi-out"> <b>It's like a little bit harder.</br>Like a little...</b> </p>@@
@@html:<p class="fragment fade-up"> <b>... except a lot?</b></br><img src="https://s3cf.recapguide.com:444/img/tv/117/21x14/The-Simpsons-Season-21-Episode-14-30-5364.jpg" width=60% alt="...except a lot"/> </p>@@
# Usually it requires too much of hand wiggling, control and competence.
# Replication of several clusters becomes a tedious routine.

# "Homer Defined" (nuclear plant meltdown)
# https://recapguide.com/recap/117/The-Simpsons/season-3/episode-5/
# https://i.pinimg.com/originals/b0/1f/d3/b01fd3e096e95b7eb0d01de180de8f32.jpg

** Typical issues

- management of _dependencies_ (versions, etc)
- taking care of _site- and system-specific details_:
  - diversity of build systems and compilers
  - diversity of recommended setups (compilers, options, libs, etc) for different sysytems/sites
  - different stacks of pre-installed ("native") software
- _off-line sites_
- maintainance of different installation versions (_combinatorial versioning_)
- sometimes one need to do an extra work to _port codes_ (patching)

** Typical lifecycle of the HPC system user

# Try different options
#+ATTR_HTML: :width 60% :alt "try different options from manuals"
https://static.wikia.nocookie.net/simpsons/images/3/3a/Homer_defined.jpg

# http://people.cs.pitt.edu/~chang/231/y11/papers/alarmDap/HomerPush.jpg

*** 
  :PROPERTIES:
  :reveal_extra_attr: data-visibility="uncounted"
  :END:

# consult numerous tutorials and wikies, finally sometimes give up and call support
#+ATTR_HTML: :width 90% :alt "call support"
https://i.kinja-img.com/gawker-media/image/upload/c_fill,f_auto,fl_progressive,g_center,h_675,pg_1,q_80,w_1200/qhrtzhpcl7yrq06t3lau.png
# https://www.nydailynews.com/resizer/5vByyVcALbG0R-fGJbUMRhUnVEA=/1200x0/top/arc-anglerfish-arc2-prod-tronc.s3.amazonaws.com/public/H42WUXYY6BF72UDSTIHT5EFWB4.jpg
# https://external-preview.redd.it/uRHUkoY_HrrXgyQNfybjEj-pdzI22KgZRMymZRkTXiA.jpg?auto=webp&s=0fc94e1104e3b71946b87618cad9035f0b7a7bc3
# https://i.ytimg.com/vi/jk8SToEQPGw/hqdefault.jpg
# https://i.imgur.com/5OGboTn.jpg

*** 
  :PROPERTIES:
  :reveal_extra_attr: data-visibility="uncounted"
  :END:

#+ATTR_HTML: :width 75% :alt "tedious, error-prone and time-consuming process"
https://wallpaperaccess.com/full/1567145.png
# https://miro.medium.com/max/1200/0*tiJIKJgBUkokcc90.jpg
# https://s3.amazonaws.com/charitycdn/cache/resizedcrop-3e3496fa4e72c7d194858f72300b6535-840x480.jpg
# https://static2.stuff.co.nz/1347326932/171/7653171.jpg

** Can we reduce the troubles?
# Can we help the users and automate this job?

#+ATTR_HTML: :width 90% :alt "yes, we can approach to the level of PyPI simplicity"
https://y.yarn.co/2d07d6ee-49fc-45c8-81b8-36f74aa60f96_screenshot.jpg

# Next hidden slides are borrowed from:
# https://de.slideshare.net/ChristophEngelbert/the-delivery-hero-a-simpsons-as-a-service-storyboard
*** 
  :PROPERTIES:
  :reveal_extra_attr: data-visibility="hidden"
  :END:

#+ATTR_HTML: :width 100%
https://image.slidesharecdn.com/delivery-hero-161216080529/95/the-delivery-hero-a-simpsons-as-a-service-storyboard-6-638.jpg

*** 
  :PROPERTIES:
  :reveal_extra_attr: data-visibility="hidden"
  :END:

#+ATTR_HTML: :width 100%
https://image.slidesharecdn.com/hazelcastmicrosoftmeetup-161222080521/95/distributed-computing-and-caching-in-the-cloud-hazelcast-and-microsoft-7-638.jpg

*** 
  :PROPERTIES:
  :reveal_extra_attr: data-visibility="hidden"
  :END:

#+ATTR_HTML: :width 100%
https://image.slidesharecdn.com/delivery-hero-161216080529/95/the-delivery-hero-a-simpsons-as-a-service-storyboard-11-638.jpg

*** 
  :PROPERTIES:
  :reveal_extra_attr: data-visibility="hidden"
  :END:

#+ATTR_HTML: :width 100%
https://image.slidesharecdn.com/delivery-hero-161216080529/95/the-delivery-hero-a-simpsons-as-a-service-storyboard-51-638.jpg

*** 
  :PROPERTIES:
  :reveal_extra_attr: data-visibility="hidden"
  :END:

#+ATTR_HTML: :width 100%
https://image.slidesharecdn.com/delivery-hero-161216080529/95/the-delivery-hero-a-simpsons-as-a-service-storyboard-55-638.jpg

** Why to use =Spack= at the 1st place?
  :PROPERTIES:
  :reveal_extra_attr: data-background-iframe="https://github.com/spack/spack" data-background-opacity="0.2" data-background-interactive
  :END:

 - make it possible to install _off-line on bare metal_ with a full control on the installation process
 - consistent _build customization_ for each platform
 - reproducible software _environments_ for all use cases over all platforms
   - way to reproducible science with /lock-files/
   - /installation matrices/ for benchmarks and performance studies
     - effect of compilers & different configurations
 - provides almost _for granted_ such _features_ as:
   - /[[https://spack.readthedocs.io/en/latest/containers.html][containerization]]/ of environments (both Docker & Singularity) and
   - GitLabCI-/[[https://spack.readthedocs.io/en/latest/pipelines.html][pipelines]]/
   - /documentation/ for the installation process

***  Why =rpm= / =apt= / =yum= or =Homebrew= / =conan= are insufficient?

# - Functional Package Managers
#   - Nix https://nixos.org/
#   - GNU Guix https://www.gnu.org/s/guix/
# - Build-from-source Package Managers
#   - Homebrew, LinuxBrew http://brew.sh
#   - MacPorts https://www.macports.org
#   - Gentoo https://gentoo.org
# - Easybuild http://hpcugent.github.io/easybuild/
#   - An installation tool for HPC
#   - Focused on HPC system administrators – different package model from Spack
#   - Relies on a fixed software stack – harder to tweak recipes for experimentation

- binary package managers (=rpm=, =yum=, =apt=, =yast=, etc.)
  - manage a single stack
  - install one version of each package in a single prefix ( /usr ).
  - seamless upgrades to a stable, well tested stack
- port systems (=Homebrew=, etc.)
  # BSD Ports, portage, Macports, Homebrew, Gentoo, etc.
  - Minimal support for builds parameterized by compilers, dependency versions.

*Common disadvantage*:
- usually do not support _*combinatorial versioning*_

*** For Python users

# https://python-poetry.org/images/logo-origami.svg
#+ATTR_REVEAL: :frag (none none appear) :frag_idx (- - 1)
- advanges over =PyPI= or [[https://python-poetry.org/][poetry]]:
  - full support of packages with _non-Python dependencies_
    - compile /non-Python dependencies/
    - can build /cythonized/ versions of a package 
    - can link to an /optimized libraries/ (e.g., MKL in case of BLAS/LAPACK)
- advanges over =conda=:
  - ability to choose a /specific compiler/
  - can link to an /specific libraries/ (BLAS/LAPACK, MPI,...)
  - better platform support for supercomputers (builds _optimized binaries_ for /specific microarchitectures/)
- disadvantages of =Spack=:
  - =PyPI=: incredible amount of packages that are not yet in =Spack=
  - =conda=: Windows support

*** Even more for Data Scientist (and Java in general)
  :PROPERTIES:
  :reveal_background: https://4.bp.blogspot.com/-De9KGx1TIp0/W_JfKdpCb1I/AAAAAAAAUtk/BZDksgCZcMw8q9RzmWWNbcpE7Y9SquR6QCLcBGAs/s1600/IMG-20170804-WA0011.jpg
  :reveal_background_size: 50%
  :reveal_extra_attr: data-background-opacity="0.25"
  :END:

- Java: ibm-java, jdk, openjdk, icedtea, etc
- Spark/PySpark, Hadoop

# +ATTR_HTML: :width 100%
# Java: https://4.bp.blogspot.com/-De9KGx1TIp0/W_JfKdpCb1I/AAAAAAAAUtk/BZDksgCZcMw8q9RzmWWNbcpE7Y9SquR6QCLcBGAs/s1600/IMG-20170804-WA0011.jpg
# AI
# https://i.ytimg.com/vi/fILG1J6gMBs/maxresdefault.jpg

*** Package number
  :PROPERTIES:
  :reveal_extra_attr: data-background-iframe="./figs/spack/spack_numpkg_vs_release.html"
  :END:
*** Container receipts?
  :PROPERTIES:
  :reveal_extra_attr: data-visibility="hidden"
  :END:

  # - Virtual Machines and Linux Containers (Docker)
#   - Containers allow users to build environments for different applications.
#   - Does not solve the build problem (someone has to build the image)
#   - Performance, security, and upgrade issues prevent widespread HPC deployment.

- Container receipts look like a valid reproducible software environment for HPC, don't they?
- Formally, yes,...
- ... but it is a substitution of terms, isn't it?
- will you be able to run it on different hardware?

